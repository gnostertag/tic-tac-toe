[{"/Users/learnacademy/Desktop/tic-tac-toe-mufasa-s-pride/src/index.js":"1","/Users/learnacademy/Desktop/tic-tac-toe-mufasa-s-pride/src/App.js":"2","/Users/learnacademy/Desktop/tic-tac-toe-mufasa-s-pride/src/reportWebVitals.js":"3","/Users/learnacademy/Desktop/tic-tac-toe-mufasa-s-pride/src/components/Square.js":"4","/Users/learnacademy/Desktop/tic-tac-toe/src/index.js":"5","/Users/learnacademy/Desktop/tic-tac-toe/src/reportWebVitals.js":"6","/Users/learnacademy/Desktop/tic-tac-toe/src/App.js":"7","/Users/learnacademy/Desktop/tic-tac-toe/src/components/Square.js":"8"},{"size":534,"mtime":1680624917721,"results":"9","hashOfConfig":"10"},{"size":1963,"mtime":1684945787127,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1680624917721,"results":"12","hashOfConfig":"10"},{"size":301,"mtime":1684945787128,"results":"13","hashOfConfig":"10"},{"size":323,"mtime":1685123160932,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1680624917721,"results":"16","hashOfConfig":"15"},{"size":1963,"mtime":1684945787127,"results":"17","hashOfConfig":"15"},{"size":231,"mtime":1685122841047,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o5pnp6",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8l5nvc",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/learnacademy/Desktop/tic-tac-toe-mufasa-s-pride/src/index.js",[],[],"/Users/learnacademy/Desktop/tic-tac-toe-mufasa-s-pride/src/App.js",["44"],[],"/Users/learnacademy/Desktop/tic-tac-toe-mufasa-s-pride/src/reportWebVitals.js",[],[],"/Users/learnacademy/Desktop/tic-tac-toe-mufasa-s-pride/src/components/Square.js",[],[],"/Users/learnacademy/Desktop/tic-tac-toe/src/index.js",[],[],"/Users/learnacademy/Desktop/tic-tac-toe/src/reportWebVitals.js",[],[],"/Users/learnacademy/Desktop/tic-tac-toe/src/App.js",["45"],[],"import React, { useState } from \"react\"\nimport Square from \"./components/Square\"\nimport \"./App.css\"\n\nconst App = () => {\n  const [squares, setSquares] = useState(Array(9).fill(null))\n  const [turn, setTurn] = useState(\"🐗\")\n  const [winner, setWinner] = useState(null)\n\n  const handleClick = (i) => {\n    if (squares[i] !== null || calculateWinner(squares)) {\n      return\n    }\n    let newSquares = [...squares]\n    newSquares[i] = turn\n    setSquares(newSquares)\n    setWinner(calculateWinner(newSquares))\n    newSquares[i] = turn === \"🐗\" ? \"🦁\" : \"🐗\"\n\n    setSquares(newSquares)\n    setTurn(newSquares[i])\n    console.log(i)\n  }\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ]\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i]\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        return squares[a]\n      }\n      if (squares.every((squares) => squares !== null)) {\n        return \"No player\"\n      }\n    }\n    return null\n  }\n\n  const champion = calculateWinner(squares)\n  let status\n  if (champion) {\n    status = `${champion} Wins!`\n    alert(status)\n  } else {\n    status = { turn }\n  }\n  const gameRestart = () => {\n    window.location.reload()\n  }\n  return (\n    <>\n    <div className=\"background\">\n\n      <h1 className=\"header\">Tic Tac Toe</h1>\n\n      <div className=\"board\">\n        {squares.map((square, index) => {\n          return (\n            <Square\n            square={square}\n            index={index}\n            key={index}\n            handleClick={handleClick}\n            />\n            )\n          })}\n      </div>\n      <div>\n        <button className=\"button\" onClick={gameRestart}>\n          Play Again\n        </button>\n      </div>\n    </div>\n    </>\n  )\n}\n\nexport default App\n","/Users/learnacademy/Desktop/tic-tac-toe/src/components/Square.js",[],[],{"ruleId":"46","severity":1,"message":"47","line":8,"column":10,"nodeType":"48","messageId":"49","endLine":8,"endColumn":16},{"ruleId":"46","severity":1,"message":"47","line":8,"column":10,"nodeType":"48","messageId":"49","endLine":8,"endColumn":16},"no-unused-vars","'winner' is assigned a value but never used.","Identifier","unusedVar"]