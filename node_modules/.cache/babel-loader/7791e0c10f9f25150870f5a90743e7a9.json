{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/tic-tac-toe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Square from \"./components/Square\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [turn, setTurn] = useState(\"üêó\");\n\n  const handleClick = i => {\n    if (squares[i] !== null || calculateWinner(squares)) {\n      return;\n    }\n\n    let newSquares = [...squares];\n    newSquares[i] = turn;\n    setSquares(newSquares);\n    newSquares[i] = turn === \"üêó\" ? \"ü¶Å\" : \"üêó\";\n    setTurn(newSquares[i]);\n    console.log(i);\n  };\n\n  function calculateWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    if (squares.every(square => square !== null)) {\n      return \"No player\";\n    }\n\n    return null;\n  }\n\n  const gameRestart = () => {\n    window.location.reload();\n  };\n\n  const champion = calculateWinner(squares);\n  let status;\n\n  if (champion) {\n    status = `${champion} Wins!`;\n    alert(status);\n  } else {\n    status = {\n      turn\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"header\",\n        children: \"Tic Tac Toe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        children: squares.map((square, index) => /*#__PURE__*/_jsxDEV(Square, {\n          square: square,\n          index: index,\n          handleClick: handleClick\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: gameRestart,\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"+p/qKKtDKI3s9w/edWyVnRgDyzQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Square","App","squares","setSquares","Array","fill","turn","setTurn","handleClick","i","calculateWinner","newSquares","console","log","lines","length","a","b","c","every","square","gameRestart","window","location","reload","champion","status","alert","map","index"],"sources":["/Users/learnacademy/Desktop/tic-tac-toe/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Square from \"./components/Square\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [turn, setTurn] = useState(\"üêó\");\n\n  const handleClick = (i) => {\n    if (squares[i] !== null || calculateWinner(squares)) {\n      return;\n    }\n    let newSquares = [...squares];\n    newSquares[i] = turn;\n    setSquares(newSquares);\n    newSquares[i] = turn === \"üêó\" ? \"ü¶Å\" : \"üêó\";\n    setTurn(newSquares[i]);\n    console.log(i);\n  };\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        return squares[a];\n      }\n    }\n\n    if (squares.every((square) => square !== null)) {\n      return \"No player\";\n    }\n\n    return null;\n  }\n\n  const gameRestart = () => {\n    window.location.reload();\n  };\n\n  const champion = calculateWinner(squares);\n  let status;\n\n  if (champion) {\n    status = `${champion} Wins!`;\n    alert(status);\n  } else {\n    status = { turn };\n  }\n\n  return (\n    <>\n      <div className=\"background\">\n        <h1 className=\"header\">Tic Tac Toe</h1>\n\n        <div className=\"board\">\n          {squares.map((square, index) => (\n            <Square\n              square={square}\n              index={index}\n              key={index}\n              handleClick={handleClick}\n            />\n          ))}\n        </div>\n        <div>\n          <button className=\"button\" onClick={gameRestart}>\n            Play Again\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}