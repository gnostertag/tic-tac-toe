{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/tic-tac-toe-mufasa-s-pride/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Square from \"./components/Square\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [turn, setTurn] = useState(\"X\");\n  const [winner, setWinner] = useState(null);\n\n  const handleClick = i => {\n    if (squares[i] !== null || calculateWinner(squares)) {\n      return;\n    }\n\n    let newSquares = [...squares];\n    newSquares[i] = turn;\n    setSquares(newSquares);\n    setWinner(calculateWinner(newSquares));\n    newSquares[i] = turn === \"X\" ? \"O\" : \"X\";\n    setSquares(newSquares);\n    setTurn(newSquares[i]);\n    console.log(i);\n  };\n\n  function calculateWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n\n      if (squares.every(squares => squares !== null)) {\n        return \"No player\";\n      }\n    }\n\n    return null;\n  }\n\n  const champion = calculateWinner(squares);\n  let status;\n\n  if (champion) {\n    status = `${champion} Wins!`;\n    alert(status);\n  } else {\n    status = {\n      turn\n    };\n  }\n\n  const gameRestart = () => {\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tic Tac Toe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: squares.map((square, index) => {\n        return /*#__PURE__*/_jsxDEV(Square, {\n          square: square,\n          index: index,\n          handleClick: handleClick\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: gameRestart,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"kCdooh6pyLJRS6rw3M2Boto3Dzo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Square","App","squares","setSquares","Array","fill","turn","setTurn","winner","setWinner","handleClick","i","calculateWinner","newSquares","console","log","lines","length","a","b","c","every","champion","status","alert","gameRestart","window","location","reload","map","square","index"],"sources":["/Users/learnacademy/Desktop/tic-tac-toe-mufasa-s-pride/src/App.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport Square from \"./components/Square\"\nimport \"./App.css\"\n\nconst App = () => {\n  const [squares, setSquares] = useState(Array(9).fill(null))\n  const [turn, setTurn] = useState(\"X\")\n  const [winner, setWinner] = useState(null)\n\n  const handleClick = (i) => {\n    if (squares[i] !== null || calculateWinner(squares)) {\n      return\n    }\n    let newSquares = [...squares]\n    newSquares[i] = turn\n    setSquares(newSquares)\n    setWinner(calculateWinner(newSquares))\n    newSquares[i] = turn === \"X\" ? \"O\" : \"X\"\n\n    setSquares(newSquares)\n    setTurn(newSquares[i])\n    console.log(i)\n  }\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ]\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i]\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        return squares[a]\n      }\n      if (squares.every((squares) => squares !== null)) {\n        return \"No player\"\n      }\n    }\n    return null\n  }\n\n  const champion = calculateWinner(squares)\n  let status\n  if (champion) {\n    status = `${champion} Wins!`\n    alert(status)\n  } else {\n    status = { turn }\n  }\n  const gameRestart = () => {\n    window.location.reload()\n  }\n  return (\n    <>\n    <div className=\"\">\n\n      <h1>Tic Tac Toe</h1>\n\n    </div>\n      <div className=\"board\">\n        {squares.map((square, index) => {\n          return (\n            <Square\n              square={square}\n              index={index}\n              key={index}\n              handleClick={handleClick}\n            />\n          )\n        })}\n      </div>\n      <div>\n        <button className=\"button\" onClick={gameRestart}>\n          Play Again\n        </button>\n      </div>\n    </>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}